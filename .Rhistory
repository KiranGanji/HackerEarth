sessioninfo()
Sessioninfo()
date()
x<-52
print(x)
x
x<-c(1:10)
y<-c(1:10)
plot(x,y)
plot(x,y, psh=19)
plot(x,y, pch=19)
warnings()
clear
load
mean(c(1:10))
mean()
mean(y)
x<-c(20,21,25,34,1,23,11,13)
sort(x)
sort.help()
str(sort)
sort(x decreasing=TRUE)
sort(x, decreasing=TRUE)
m<-matrix(nrows=2,ncol=3)
m<-matrix(c(1:6),2,3)
m
m[1]
m[1,]
m[,1]
for(i in 10){print(i)}
for(i in 1:10){print(i)}
apply(m,1,sum)
apply(m,2,mean)
my_list<-list(x,y,m)
my_list
my_list[1]
my_list[[1]]
my_list[[2]]
my_list.names()
names(my_list)
names(my_list)<-c("A","B","C")
names(my_list)
my_list
my_list$A
log(x)
z<-matrix(x,4,4)
z<-matrix(4,4)
z
z<-matrix(4,4,1)
z
x<-c(1:16)
x
z<-matrix(x,4,4)
z
lm()
lm
install.packages("h2o")
library(rjson)
library(rserve)
library(Rserve)
library(Rserve)
library(RSclient)
getwd()
list.files()
q()
install.packages("xlsx")
library(data.table)
library(plyr)
library(xlsx)
setwd("E:\\Codes\\hackerearthCodes")
line <- readLines('sample.txt', warn=FALSE)
t=scan(text =line , what = " ")
strng <- unlist(strsplit(t[[2]],""))
length(unique(strng))
sapply(letters, function(x) x<-sum(x==unique(strng)))
sum(sapply(letters, function(x) x<-sum(x==unique(strng))))
strng
strng
sum(sapply(letters, function(x) x<-sum(x==strng)))
identical(c("a","a"))
line <- readLines('sample.txt', warn=FALSE)
t=scan(text =line , what = " ")
strng <- unlist(strsplit(t[[2]],""))
if(length(unique(strng)) !=3){
cat("Not okay", "\n")
}else{
#Check for consecutiveness
fac <- sum(sapply(letters, function(x) x<-sum(x==strng)))
if(fac%%3 !=0){
cat("Not OK", "\n")
}else{
facMain <- (fac/3)
subStrng1 <- strng[1:facMain]
subStrng2 <- strng[(facMain+1):(2*facMain)]
subStrng2 <- strng[(2*facMain+1):(3*facMain)]
if(length(unique(subStrng1)) == 1 & length(unique(subStrng2)) == 1 & length(unique(subStrng2)) == 1 ){
cat("OK","\n")
}else{
cat("Not OK", "\n")
}
}
}
line <- readLines('sample.txt', warn=FALSE)
t=scan(text =line , what = " ")
t
line <- readLines('sample.txt', warn=FALSE)
t=scan(text =line , what = " ")
nlines <- as.numeric(t[[1]])
for(i in 2:(nlines+1)){
strng <- unlist(strsplit(t[[i]],""))
if(length(unique(strng)) !=3){
cat("Not okay", "\n")
}else{
#Check for consecutiveness
fac <- sum(sapply(letters, function(x) x<-sum(x==strng)))
if(fac%%3 !=0){
cat("Not OK", "\n")
}else{
facMain <- (fac/3)
subStrng1 <- strng[1:facMain]
subStrng2 <- strng[(facMain+1):(2*facMain)]
subStrng2 <- strng[(2*facMain+1):(3*facMain)]
if(length(unique(subStrng1)) == 1 & length(unique(subStrng2)) == 1 & length(unique(subStrng2)) == 1 ){
cat("OK","\n")
}else{
cat("Not OK", "\n")
}
}
}
}
system.time(
line <- readLines('sample.txt', warn=FALSE)
t=scan(text =line , what = " ")
nlines <- as.numeric(t[[1]])
for(i in 2:(nlines+1)){
strng <- unlist(strsplit(t[[i]],""))
if(length(unique(strng)) !=3){
cat("Not okay", "\n")
}else{
#Check for consecutiveness
fac <- sum(sapply(letters, function(x) x<-sum(x==strng)))
if(fac%%3 !=0){
cat("Not OK", "\n")
}else{
facMain <- (fac/3)
subStrng1 <- strng[1:facMain]
subStrng2 <- strng[(facMain+1):(2*facMain)]
subStrng2 <- strng[(2*facMain+1):(3*facMain)]
if(length(unique(subStrng1)) == 1 & length(unique(subStrng2)) == 1 & length(unique(subStrng2)) == 1 ){
cat("OK","\n")
}else{
cat("Not OK", "\n")
}
}
}
}
)
seetime <- function(){
line <- readLines('sample.txt', warn=FALSE)
t=scan(text =line , what = " ")
nlines <- as.numeric(t[[1]])
for(i in 2:(nlines+1)){
strng <- unlist(strsplit(t[[i]],""))
if(length(unique(strng)) !=3){
cat("Not okay", "\n")
}else{
#Check for consecutiveness
fac <- sum(sapply(letters, function(x) x<-sum(x==strng)))
if(fac%%3 !=0){
cat("Not OK", "\n")
}else{
facMain <- (fac/3)
subStrng1 <- strng[1:facMain]
subStrng2 <- strng[(facMain+1):(2*facMain)]
subStrng2 <- strng[(2*facMain+1):(3*facMain)]
if(length(unique(subStrng1)) == 1 & length(unique(subStrng2)) == 1 & length(unique(subStrng2)) == 1 ){
cat("OK","\n")
}else{
cat("Not OK", "\n")
}
}
}
}
}
system.time(seetime())
line <- readLines('sample.txt', warn=FALSE)
t=scan(text =line , what = " ")
t
t=as.numeric(scan(text =line , what = " "))
t
t
nums <- c(0:9)
counts <- sapply(nums, function(x) x <- sum(x == t[[1]]))
counts
line <- readLines('sample.txt', warn=FALSE)
t <- scan(text =line , what = " ")
strng<- as.numeric(unlist(strsplit(t[[1]], "")))
nums <- c(0:9)
counts <- sapply(nums, function(x) x <- sum(x == t[[1]]))
counts
strng
nums <- c(0:9)
nums
counts <- sapply(nums, function(x) x <- sum(x == strng))
counts
wts <- c(6,2,5,5,4,5,6,3,7,6)
counts <- counts * wts
sum(counts)
line <- readLines('sample.txt', warn=FALSE)
t <- as.numeric(scan(text =line , what = " "))
t
TotPans <- function(x){
y <- (x* (x+1)*(x+2))/3
return(y)
}
TotPans(10)
TotPans(100)
TotPans(1000)
TotPans(999)
TotPans(800)
1e8
100000000
TotPans(700)
TotPans(600)
TotPans(650)
TotPans(680)
TotPans(670)
TotPans(660)
TotPans(669)
TotPans(668)
n <- t[[1]]
i <- 1
while(n >0){
n <- n - TotPans(i)
i <- i+1
}
print(i)
n
n <- t[[1]]
i <- 0
while(n >0){
i <- i+1
n <- n - TotPans(i)
}
print(i)
n
PansRem <- n - TotPans(i-1)
PansRem
TotPans(i-1)
PansRem <- t[[1]] - TotPans(i-1)
PansRem
TotPans <- function(x){
y <- (x* (x+1)*(x+2))/3
return(y)
}
line <- readLines('sample.txt', warn=FALSE)
t <- as.numeric(scan(text =line , what = " "))
n <- t[[1]]
i <- 0
while(n >0){
i <- i+1
n <- n - TotPans(i)
}
PansRem <- t[[1]] - TotPans(i-1)
if((PansRem - i)<0){
cat("Darshak")
}else{
cat("Chandan")
}
TotPans <- function(x){
y <- (x* (x+1)*(x+2))/3
return(y)
}
line <- readLines('sample.txt', warn=FALSE)
t <- as.numeric(scan(text =line , what = " "))
n <- t[[1]]
i <- 0
while(n >0){
i <- i+1
n <- n - TotPans(i)
}
PansRem <- t[[1]] - TotPans(i-1)
if((PansRem - i)<0){
cat("Darshak")
}else{
cat("Chandan")
}
i
TotPans(18)
TotPans(19)
TotPans <- function(x){
y <- (x* (x+1)*(x+2))/3
return(y)
}
line <- readLines('sample.txt', warn=FALSE)
t <- as.numeric(scan(text =line , what = " "))
n <- t[[1]]
i <- 0
while(n >0){
i <- i+1
n <- n - (i+i^2)
}
PansRem <- t[[1]] - TotPans(i-1)
if((PansRem - i)<0){
cat("Darshak")
}else{
cat("Chandan")
}
TotPans <- function(x){
y <- (x* (x+1)*(x+2))/3
return(y)
}
line <- readLines('sample.txt', warn=FALSE)
t <- as.numeric(scan(text =line , what = " "))
n <- t[[1]]
i <- 0
while(n >0){
i <- i+1
n <- n - (i+i^2)
}
PansRem <- t[[1]] - TotPans(i-1)
if((PansRem - i)<0){
cat("Darshak")
}else{
cat("Chandan")
}
TotPans <- function(x){
y <- (x* (x+1)*(x+2))/3
return(y)
}
line <- readLines('sample.txt', warn=FALSE)
t <- as.numeric(scan(text =line , what = " "))
n <- t[[1]]
i <- 0
while(n >0){
i <- i+1
n <- n - (i+i^2)
}
PansRem <- t[[1]] - TotPans(i-1)
if((PansRem - i)<0){
cat("Darshak")
}else{
cat("Chandan")
}
i
TotPans(i-1)
line <- readLines('sample.txt', warn=FALSE)
t <- scan(text =line , what = " ")
t
line <- readLines('sample.txt', warn=FALSE)
t <- scan(text =line , what = " ")
nlines <- as.numeric(t[[1]])
for(i in 2:(nlines+1)){
strng <- unlist(strsplit(t[[i]],""))
if(length(unique(strng)) == 26){
cat("YES","\n")
}else{
cat("NO","\n")
}
}
line <- readLines('sample.txt', warn=FALSE)
t <- scan(text =line , what = " ")
t
line <- readLines('sample.txt', warn=FALSE)
t <- as.numeric(scan(text =line , what = " "))
t
fxy(t[[1]],t[[2]])
fxy <- function(x,y){
if(x==0){
return(y+1)
}
else if(x >0 & y==0){
fxy(x-1,1)
}
else{
fxy(x-1, fxy(x,y-1))
}
}
fxy(t[[1]],t[[2]])
line <- readLines('sample.txt', warn=FALSE)
t <- as.numeric(scan(text =line , what = " "))
fxy(t[[1]],t[[2]])
fxy <- function(x,y){
if(x==0){
return(y+1)
}
else if(x >0 & y==0){
print("here")
fxy(x-1,1)
}
else{
print("here2")
fxy(x-1, fxy(x,y-1))
}
}
line <- readLines('sample.txt', warn=FALSE)
t <- as.numeric(scan(text =line , what = " "))
fxy(t[[1]],t[[2]])
fxy <- function(x,y){
if(x==0){
return(y+1)
}
else if(x >0 & y==0){
print("here")
fxy(x-1,1)
}
else{
print("here2")
y2 <- fxy(x,y-1)
fxy(x-1, y2)
}
}
line <- readLines('sample.txt', warn=FALSE)
t <- as.numeric(scan(text =line , what = " "))
fxy(t[[1]],t[[2]])
fxy <- function(x,y){
if(x==0){
return(y+1)
}
else if(x >0 & y==0){
print("here")
fxy(x-1,1)
}
else{
print("here2")
y2 <- fxy(x,y-1)
fxy(x-1, y2)
}
}
line <- readLines('sample.txt', warn=FALSE)
t <- as.numeric(scan(text =line , what = " "))
fxy(t[[1]],t[[2]])
fxy <- function(x,y){
print(paste0(x," ",y))
if(x==0){
return(y+1)
}
else if(x >0 & y==0){
fxy(x-1,1)
}
else{
y2 <- fxy(x,y-1)
fxy(x-1, y2)
}
}
line <- readLines('sample.txt', warn=FALSE)
t <- as.numeric(scan(text =line , what = " "))
fxy(t[[1]],t[[2]])
line <- readLines('sample.txt', warn=FALSE)
t <- as.numeric(scan(text =line , what = " "))
fxy(t[[1]],t[[2]])
line <- readLines('sample.txt', warn=FALSE)
t <- as.numeric(scan(text =line , what = " "))
fxy(t[[1]],t[[2]])
fxy <- function(x,y){
print(paste0(x," ",y))
if(x==0){
print("hereonce")
return(y+1)
}
else if(x >0 & y==0){
fxy(x-1,1)
}
else{
y2 <- fxy(x,y-1)
fxy(x-1, y2)
}
}
line <- readLines('sample.txt', warn=FALSE)
t <- as.numeric(scan(text =line , what = " "))
fxy(t[[1]],t[[2]])
fxy <- function(x,y){
print(paste0(x," ",y))
if(x==0){
print("hereonce")
return(y+1)
}
else if(x >0 & y==0){
print("hereaswell")
fxy(x-1,1)
}
else{
y2 <- fxy(x,y-1)
fxy(x-1, y2)
}
}
line <- readLines('sample.txt', warn=FALSE)
t <- as.numeric(scan(text =line , what = " "))
fxy(t[[1]],t[[2]])
rm(list=ls())
